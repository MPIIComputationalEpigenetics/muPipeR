% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CommandR-class.R
\docType{methods}
\name{lapplyExec,CommandR-method}
\alias{lapplyExec,CommandR-method}
\alias{lapplyExec}
\title{lapplyExec-methods}
\usage{
\S4method{lapplyExec}{CommandR}(object, X, FUN, env = new.env(parent =
  emptyenv()), loadPackages = .packages(), Rexec = "Rscript",
  name = "run", cleanUp = TRUE, ...)
}
\arguments{
\item{object}{\code{\linkS4class{CommandR}} object}

\item{X}{the object to iterate over. Currently only \code{list} objects are supported}

\item{FUN}{the R function to be run}

\item{env}{R environment or list storing variables that will be exported and might be used in the function call}

\item{loadPackages}{character vector of packages to load before executing the function}

\item{Rexec}{the command that is used to run the R script that is generated}

\item{name}{a name for the execution that will be used as identifier and prefix for the jobs that are run}

\item{cleanUp}{should the directory structure created for running the jobs be deleted when completed}

\item{...}{optional arguments to \code{FUN}}
}
\value{
a list containing the results of \code{FUN} for each element in \code{X}
}
\description{
lapply for \code{\linkS4class{CommandR}} objects using \code{\link{lexec,CommandR-method}}
}
\details{
It will create an R script for the commands
}
\examples{
\donttest{
ll <- lapply(1:20,  identity)
cmdr <- CommandRsystem("partest")
rr <- lapplyExec(cmdr, ll, function(i, b){Sys.sleep(1); print(a); print(b); return(paste("success on job", i, "- status:", b))}, env=list(a="success"), cleanUp=FALSE, b="superduper")
}
}
\author{
Fabian Mueller
}
